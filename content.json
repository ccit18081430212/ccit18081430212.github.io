{"meta":{"title":"scl","subtitle":"","description":"","author":"ccit18081430212","url":"https://ccit18081430212.github.io","root":"/"},"pages":[{"title":"about","date":"2020-05-30T12:29:54.000Z","updated":"2020-05-30T12:30:48.007Z","comments":true,"path":"about/index-1.html","permalink":"https://ccit18081430212.github.io/about/index-1.html","excerpt":"","text":""},{"title":"categories","date":"2020-05-30T12:25:59.000Z","updated":"2020-05-30T12:27:08.581Z","comments":true,"path":"categories/index.html","permalink":"https://ccit18081430212.github.io/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-05-24T13:23:59.000Z","updated":"2020-05-24T13:23:59.053Z","comments":true,"path":"friends/index.html","permalink":"https://ccit18081430212.github.io/friends/index.html","excerpt":"","text":""},{"title":"clean","date":"2020-05-24T13:30:08.000Z","updated":"2020-05-24T13:30:08.922Z","comments":true,"path":"clean/index.html","permalink":"https://ccit18081430212.github.io/clean/index.html","excerpt":"","text":""},{"title":"gallery","date":"2020-05-30T12:31:07.000Z","updated":"2020-05-30T12:31:45.738Z","comments":true,"path":"gallery/index.html","permalink":"https://ccit18081430212.github.io/gallery/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-05-30T12:27:47.000Z","updated":"2020-05-30T12:48:45.438Z","comments":true,"path":"tags/index.html","permalink":"https://ccit18081430212.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"设备连接","slug":"title","date":"2020-06-16T09:24:35.000Z","updated":"2020-06-16T09:57:51.807Z","comments":true,"path":"2020/06/16/title/","link":"","permalink":"https://ccit18081430212.github.io/2020/06/16/title/","excerpt":"","text":"设备连接Micro:bit是由英国BBC公司推出的一款手持式可编程的微型计算机，可用于各种很新潮的创新，从机器人到乐器 – 无止尽，从小学到大学，非常容易开始，拥有无限可能性！一块BBC小板子上有温度传感器和光线传感器，运动传感器（加速度和指南针），2个可编程按钮，25颗独立可编程的LED，无线通讯，通过无线电和蓝牙等常用设备，无需安装任何软件， 你可以通过任意一个网页浏览器在 Blocks、 Javascript、Python、Scratch等编辑器上编写代码。费用比绝大多数玩具低——值得你入坑。 ![](D:\\blog\\ccit18081430212Blog\\source\\ccit18081430212\\QQ截图20200616115828 (2).png) 在这里简绍连接Micro:bit蓝牙设备的两种方法。 方法一本机使用windows 10系统，进行操作。 step2：下载固件到开发板如果microbit开发板想和我们的电脑通过蓝牙进行无线通信，我们就需要启动板子的蓝牙设备功能，因此要下载固件到开发板中进行激活。 https://makecode.microbit.org/v0/89975-20684-84568-20127 打开上面链接下载固件，然后用USB线连接开发板和电脑，将下载的固件移到开发板对应的MINCROBIT（G)盘中，这个时候会发现板子上黄色小灯不停闪烁，这说明在下载中，然后板子中LED小灯会显出Hi！,这就说明下载成功。 step3：使用谷歌浏览器工具打开Chrome浏览器输入以下网址：chrome://bluetooth-internals/#adapter 找到对应的板子蓝牙（BBC micro:bit）进行连接。 ![](D:\\blog\\ccit18081430212Blog\\source\\ccit18081430212\\QQ截图20200616150441 33.png) 出现connected表示连接成功 板子出现以上结果显示C表示设备连接成功。 方法三在方法一中step1和step2的基础上，进行程序编写，也可实现BBC micro:bit蓝牙设备连接，在这里编辑器我用的是Adobe Dreamweaver和Notepad++，这两个软件都可下载安装。程序内容如下： 程序编写使用Html和JavaScript，文件格式是.html然后用浏览器本地打开即可。 这样及连接成功。现象也是在开发板上显示C ![](D:\\blog\\ccit18081430212Blog\\source\\ccit18081430212\\8D6C3DB86C953106060CAA3642CC6 (1).jpg)","categories":[],"tags":[{"name":"开发板介绍","slug":"开发板介绍","permalink":"https://ccit18081430212.github.io/tags/%E5%BC%80%E5%8F%91%E6%9D%BF%E4%BB%8B%E7%BB%8D/"}]},{"title":"博客心得","slug":"博客心得","date":"2020-05-27T11:28:43.062Z","updated":"2020-05-27T11:44:58.243Z","comments":true,"path":"2020/05/27/博客心得/","link":"","permalink":"https://ccit18081430212.github.io/2020/05/27/%E5%8D%9A%E5%AE%A2%E5%BF%83%E5%BE%97/","excerpt":"","text":"title: 博客date: 2020-05-27 19:28:43tags:—Hexo（官方网站）是一个快速、简洁且高效的博客框架，使用 Markdown 解析文章，在几秒内，即可利用靓丽的主题生成静态网页，并且它拥有非常丰富的主题模板和插件，最重要的是，Hexo 可以部署到 Github 等代码托管平台上，加上这些平台提供的免费 Page 服务，不用花一分钱就可以拥有一个好看易用的个人博客，何乐而不为呢！","categories":[],"tags":[]},{"title":"Hexo上传至Github","slug":"Hexo上传至Github","date":"2020-05-23T12:05:08.000Z","updated":"2020-05-30T14:24:37.549Z","comments":true,"path":"2020/05/23/Hexo上传至Github/","link":"","permalink":"https://ccit18081430212.github.io/2020/05/23/Hexo%E4%B8%8A%E4%BC%A0%E8%87%B3Github/","excerpt":"","text":"准备工作我们要将自己的博客上传至Github,首先我们需要将去注册我们GIithub账户。 注册Github：右上角的sign in是登录，sign up是注册。 新建仓库(Repository):点击create repository按钮。 查看仓库配置：点击仓库右上角的Settings选项。 获取本机当前用户的SSH公钥：首先查看在本机的当前用户(操作系统的登录账户)目录下是否已经存在ssh公钥。~表示当前用户的家目录。 SSH公钥是是将Hexo关键所在，Github SSH公钥具体配置方法 绑定Hexo和Github1.修改本地站点配置文件: 打开站点目录（blog\\）下的_config.yml文件，将最后一部分修改为 1234deploy: type: git repo: git@github.com:username&#x2F;username.github.io.git branch: master 2.安装关联hexo和git的工具: 1npm install hexo-deployer-git –save 如果最后可以看到这个工具的版本号，则表明安装成功。 Hexo升天部署Hexo：执行以下命令:hexo d 这个命令会将本地博客根目录（blog\\）下public文件夹里的所有文件上传至Github上的username/username.github.io.git这个仓库。 2.博客预览：在浏览器中输入https://username.github.io,如果看到新页面则大功告成.","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://ccit18081430212.github.io/tags/Hexo/"}]},{"title":"Hexo主题与Gitalk","slug":"Hexo主题与Gitalk","date":"2020-05-23T12:05:08.000Z","updated":"2020-05-31T02:38:30.673Z","comments":true,"path":"2020/05/23/Hexo主题与Gitalk/","link":"","permalink":"https://ccit18081430212.github.io/2020/05/23/Hexo%E4%B8%BB%E9%A2%98%E4%B8%8EGitalk/","excerpt":"","text":"Hexo主题配置一、我们现在的博客是初始化的主题，所以我们要给Hexo换上新装。Hexo主题在官网有很多，大家可以登录查看官网链接。 有自己中意的主题以后，前往作者的Github,点击：“clone or download”，把文件夹下载到自己所创建的博客“themes”文件中。 二、进入自己所创建的博客文件夹中，找到“_config.yml“文件，在这里我推荐大家“Typora”软件打开这个文件，以及后期的博文，我都推荐大家使用“Tpyora”。 利用查找功能找到：Themes的主题配置。将主题Themes改成：自己所下载的主题名称。 Gitalk开启评论功能一、新建仓库 点击你的用户名\\，定位到github用户主页，新建一个仓库 点击New\\之后，你应该看到 二、注册应用 Gitalk评论插件的授权机制依赖于OAuth Application，故使用Gitalk之前注册新应用。注册链接 点击注册链接\\之后，你应该看到 点击Register application\\之后，你应该看到 请复制、保留Client ID和Client Secret的值（相应字段下方的字符串。此处Teach-ple应用我已删除） 三、主题配置 现在，请打开主题目录下的_config.yml文件，配置Gitalk评论插件的参数 四、本地测试 hexo ghexo s hexo s本地测试以检查参数是否设置错误，hexo d部署以正常使用。（第一次使用，请登陆初始化）","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://ccit18081430212.github.io/tags/Hexo/"}]},{"title":"Hexo本地搭建","slug":"Hexo本地搭建","date":"2020-05-19T13:02:40.000Z","updated":"2020-05-30T14:24:36.448Z","comments":true,"path":"2020/05/19/Hexo本地搭建/","link":"","permalink":"https://ccit18081430212.github.io/2020/05/19/Hexo%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA/","excerpt":"","text":"本博主第一篇文章，主要介绍：为何使用hexo。如何进行hexo本地的搭建以及遇到的问题，解决方案。 为何使用Hexo目前网络有形形色色的博客，我们在这些平台的注册博客，发表文章，如果后来平台消失，我们发表的宝贵文章，也随之消失。 我也将会在hexo 中记录自己学习心得，作为自己的“北大荒”。 Hexo本地搭建环境的搭建事物的运行都需要一个环境，所以要想让hexo运行就需要为其搭建一个环境。 Node.js,和Git是hexo环境搭建的主要的软件。 一、安装Node.js去官网选择最新的版本，安装完成后在CMD指令窗口输入指令：”node -v“。 等待电脑给出 Node 的版本号，如若给出则安装成功。 二、安装Git 安装 Git,完成后在CMD窗口输入“Git”指令。 如若出现上图，则表示Git安装成功。 Hexo安装环境搭建完成后，我们就要进行Hexo的安装。 在CMD窗口输入“npm install hexo-cli -g”。进行安装。 安装完成后如果可以看到hexo-cli的版本号，则表示安装成功。 上图可以看到Hexo的版本号，代表已经安装成功。 本地博客的创建所有准备工作完成后，我们就要进行本地博客的创建。 一、首先在CMD指令窗口输入：md blog ，这个指令是创建一个名为”blog”的文件夹。建议将此文件夹创建在其余盘中。 二、初始化博客：分别在CMD中依次输入： 12cd bloghexo init 若实验结果出现“Start blogging with Hexo!”字符串，则表示初始化成功且可以开始写博客了。注意：在初始化Hexo博客之前，必须保证根目录为空,否则无法成功初始化。 如若出现上图则表示博客创建成功。 三、本地博客预览 在CMD窗口输入指令：”hexo s“ 若结果发现有”Hexo is running at http://localhost:4000/字符串，则表示启动成功，Hexo当前就运行在上述网址。","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://ccit18081430212.github.io/tags/Hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-03-15T11:13:31.765Z","updated":"2020-03-15T11:18:35.040Z","comments":true,"path":"2020/03/15/hello-world/","link":"","permalink":"https://ccit18081430212.github.io/2020/03/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. helloQuick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"开发板介绍","slug":"开发板介绍","permalink":"https://ccit18081430212.github.io/tags/%E5%BC%80%E5%8F%91%E6%9D%BF%E4%BB%8B%E7%BB%8D/"},{"name":"Hexo","slug":"Hexo","permalink":"https://ccit18081430212.github.io/tags/Hexo/"}]}